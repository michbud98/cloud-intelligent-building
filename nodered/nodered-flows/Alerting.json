[
    {
        "id": "07ac8830d610a027",
        "type": "tab",
        "label": "Alerting",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ada0f6b1aec3df3f",
        "type": "debug",
        "z": "07ac8830d610a027",
        "name": "Print rooms",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 300,
        "wires": []
    },
    {
        "id": "92f4d0dd5b907503",
        "type": "function",
        "z": "07ac8830d610a027",
        "name": "Rooms query",
        "func": "msg.query = \"SELECT DISTINCT room FROM sensors;\"\n//msg.topic=`DELETE FROM sensors where sensor_id=\"postman-1\";`\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 360,
        "wires": [
            [
                "31cf1eba7e672bcd",
                "fe2ee9eb3e64508e"
            ]
        ]
    },
    {
        "id": "6851fc4e1d98013d",
        "type": "split",
        "z": "07ac8830d610a027",
        "name": "Split values",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "payload",
        "x": 1010,
        "y": 360,
        "wires": [
            [
                "226fa191b5078f7c"
            ]
        ]
    },
    {
        "id": "226fa191b5078f7c",
        "type": "change",
        "z": "07ac8830d610a027",
        "name": "Get room",
        "rules": [
            {
                "t": "move",
                "p": "payload.room",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 360,
        "wires": [
            [
                "ada0f6b1aec3df3f",
                "50818ff4fa3a9b25"
            ]
        ]
    },
    {
        "id": "f88830bc51caac2a",
        "type": "function",
        "z": "07ac8830d610a027",
        "name": "For each room check if data is send",
        "func": "msg.queryParameters = { \n    room: msg.payload\n}\n\nmsg.query = \"SELECT * FROM sensor_measurements WHERE room = $room AND time >= NOW() - INTERVAL '1 hour'\"\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 460,
        "wires": [
            [
                "8bb1e2331482daae"
            ]
        ]
    },
    {
        "id": "23aa29954e8277d1",
        "type": "debug",
        "z": "07ac8830d610a027",
        "name": "Print results",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 420,
        "wires": []
    },
    {
        "id": "24ad4f2e896be3c7",
        "type": "switch",
        "z": "07ac8830d610a027",
        "name": "If sensor has no data",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 820,
        "y": 460,
        "wires": [
            [
                "3beb2940e9859e99"
            ]
        ]
    },
    {
        "id": "3beb2940e9859e99",
        "type": "function",
        "z": "07ac8830d610a027",
        "name": "Send notification to Discord",
        "func": "msg.payload = {\n    content: `@everyone - Sensor set to room ${msg.queryParameters.room} isn't sending data to InfluxDB. Please check it.`\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 460,
        "wires": [
            [
                "841526c51b1fb5dd"
            ]
        ]
    },
    {
        "id": "841526c51b1fb5dd",
        "type": "http request",
        "z": "07ac8830d610a027",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://discord.com/api/webhooks/1221156469416788028/spLtZ-g3rRWSlaAM-xZHyl1JdER6mjMHfgmLWPQvUX9gXxSUZJ8CXlTmb3CnqIzDH3TK",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1270,
        "y": 460,
        "wires": [
            [
                "babb6b07ee396b44"
            ]
        ]
    },
    {
        "id": "31938c4d519cf419",
        "type": "link in",
        "z": "07ac8830d610a027",
        "name": "link in 1",
        "links": [
            "50818ff4fa3a9b25"
        ],
        "x": 85,
        "y": 460,
        "wires": [
            [
                "f88830bc51caac2a"
            ]
        ]
    },
    {
        "id": "50818ff4fa3a9b25",
        "type": "link out",
        "z": "07ac8830d610a027",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "31938c4d519cf419"
        ],
        "x": 1325,
        "y": 360,
        "wires": []
    },
    {
        "id": "1c488b8dc21bd9f2",
        "type": "exec",
        "z": "07ac8830d610a027",
        "command": "date -I'seconds'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 360,
        "y": 220,
        "wires": [
            [
                "05eb6e5a47c4e318"
            ],
            [],
            []
        ]
    },
    {
        "id": "05eb6e5a47c4e318",
        "type": "function",
        "z": "07ac8830d610a027",
        "name": "Create msg.payload",
        "func": "\n// 2022-09-08T17:08:38+0000 everything after plus is removed\nlet date = new Date(msg.payload.split(\"+\")[0]);\nUTC_date = `${date.toISOString().split(\".\")[0]}`;\n\ndate.setTime(date.getTime() + 2 * 60 * 60 * 1000);\nLocal_date = `${date.toISOString().split(\".\")[0]}`;\n\n\nmsg.payload = \n\n`\nRunning automation at: \nUTC time  ${UTC_date}\nGMT+2  ${Local_date}\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 220,
        "wires": [
            [
                "3bcc7253abd8b325"
            ]
        ]
    },
    {
        "id": "3bcc7253abd8b325",
        "type": "debug",
        "z": "07ac8830d610a027",
        "name": "Print msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 220,
        "wires": []
    },
    {
        "id": "60ecebe5d7d9bf8f",
        "type": "inject",
        "z": "07ac8830d610a027",
        "name": "Workdays",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "0 19-21 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "92f4d0dd5b907503",
                "1c488b8dc21bd9f2"
            ]
        ]
    },
    {
        "id": "1f0d165122286e2f",
        "type": "inject",
        "z": "07ac8830d610a027",
        "name": "Weekend",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "0 10-21 * * 6,0",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 360,
        "wires": [
            [
                "92f4d0dd5b907503",
                "1c488b8dc21bd9f2"
            ]
        ]
    },
    {
        "id": "31cf1eba7e672bcd",
        "type": "postgresql",
        "z": "07ac8830d610a027",
        "name": "",
        "query": "",
        "postgreSQLConfig": "b6d5c0074129b3d4",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 550,
        "y": 360,
        "wires": [
            [
                "ab972221879db998",
                "01d76788eddb7676"
            ]
        ]
    },
    {
        "id": "fe2ee9eb3e64508e",
        "type": "debug",
        "z": "07ac8830d610a027",
        "name": "Print rooms query",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 300,
        "wires": []
    },
    {
        "id": "ab972221879db998",
        "type": "debug",
        "z": "07ac8830d610a027",
        "name": "Print db response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 320,
        "wires": []
    },
    {
        "id": "8bb1e2331482daae",
        "type": "postgresql",
        "z": "07ac8830d610a027",
        "name": "",
        "query": "",
        "postgreSQLConfig": "b6d5c0074129b3d4",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 550,
        "y": 460,
        "wires": [
            [
                "24ad4f2e896be3c7",
                "23aa29954e8277d1"
            ]
        ]
    },
    {
        "id": "babb6b07ee396b44",
        "type": "debug",
        "z": "07ac8830d610a027",
        "name": "Print http response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 460,
        "wires": []
    },
    {
        "id": "01d76788eddb7676",
        "type": "function",
        "z": "07ac8830d610a027",
        "name": "Add outdoors",
        "func": "\n//msg.payload = msg.payload.concat([{room: \"Outdoors\"}, {room: \"water_boiler_room\"}])\nmsg.payload = msg.payload.concat([{room: \"outdoors\"}])\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 360,
        "wires": [
            [
                "6851fc4e1d98013d"
            ]
        ]
    },
    {
        "id": "b6d5c0074129b3d4",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "timescaledb",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "example",
        "passwordFieldType": "str"
    }
]